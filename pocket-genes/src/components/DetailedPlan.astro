---
const { title, subtitle, items, isHighlighted } = Astro.props;
const containerClass = isHighlighted ? "container highlighted" : "container";
---

<div class={containerClass}>
  <h3 class="title">{title}</h3>
  
  <p class="subtitle" set:html={subtitle}></p>

  <ul>
    {
      items.map((item: string) => {
        return (
          <li>
            <p>{item}</p>
          </li>
        );
      })
    }
  </ul>
</div>

<style>
  .container {
    display: flex;
    flex-direction: column;
    margin-left: 3rem;
  }

  .highlighted {
    transform: translate(0, -2rem);
    background-color: #6d9eeb;
    width: 80%;
    padding: 2rem 0 2rem 6rem;
    margin-left: 2rem;
    border-radius: 100px;
  }

  .highlighted .subtitle {
    color: white;
  }

  .highlighted ul {
    color: white;
  }

  .highlighted .title {
    color: white;
}

  .title {
    font-size: 3.5rem;
    margin: 0;
    text-align: start;
    font-weight: bolder;
  }

  .subtitle {
    font-size: 1.75rem;
    margin: 1rem 0;
    width: 70%;
    text-align: start;
    color: #666666;
  }

  ul li {
    font-size: 1.85rem;
    font-weight: 700;
    margin: 0;
    padding: 0;
    text-align: start;
  }

  ul {
    padding: 0;
  }

  @media screen and (max-width: 768px) {
    .container {
      margin-left: 0;
    }

    .highlighted {
      width: 100%;
      padding: 2rem;
    }

    .title {
      font-size: 2.5rem;
    }

    .subtitle {
      font-size: 1.5rem;
      width: 100%;
    }

    ul li {
      font-size: 1.5rem;
    }
    
  }

  @media (min-width: 769px) and (max-width: 1200px) {
    .container {
      margin-left: 0;
    }

    .highlighted {
      width: 100%;
      padding: 2rem;
    }

    .title {
      font-size: 4rem;
    }

    .subtitle {
      font-size: 2rem;
      width: 100%;
    }

    ul li {
      font-size: 1.75rem;
    }
    
  }
</style>
